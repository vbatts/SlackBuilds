#!/bin/sh

# Slackware build script for truecrypt

# Copyright 2007,2008 Vincent Batts, vbatts@hashbangbash.com

set -e

PRGNAM=truecrypt
VERSION=6.1a
WXWINDOWS="wxGTK"
WXWINDOWS_VERSION="2.8.9"
ARCH=${ARCH:-i486}
BUILD=${BUILD:-1}
TAG=${TAG:-_vb}
CWD=$(pwd)
TMP=${TMP:-/tmp/vb}
PKG=$TMP/package-$PRGNAM
OUTPUT=${OUTPUT:-/tmp}

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -march=i486 -mtune=i686"
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -march=i686 -mtune=i686"
fi

 if [ ! -d ${TMP}/$WXWINDOWS-$WXWINDOWS_VERSION/ ] ; then
     echo "no $WXWINDOWS source dir found, looking for tar.gz"
     if [ -f $CWD/$WXWINDOWS-$WXWINDOWS_VERSION.tar.gz ] ; then
	 echo "tar.gz found, extracting archive to $TMP"
	 mkdir -p ${TMP}/
	 cd ${TMP}/
   if [ ! -f $CWD/$WXWINDOWS-$WXWINDOWS_VERSION.tar.gz ] ; then
     wget http://downloads.sourceforge.net/wxwindows/$WXWINDOWS-$WXWINDOWS_VERSION.tar.gz
     mv $WXWINDOWS-$WXWINDOWS_VERSION.tar.gz $CWD
   fi
	 tar xvf $CWD/$WXWINDOWS-$WXWINDOWS_VERSION.tar.gz
	 cd -
     else
       echo "$0: please build $WXWINDOWS-$WXWINDOWS_VERSION SlackBuild First"
       echo "$0:   or have the $WXWINDOWS-$WXWINDOWS_VERSION.tar.gz source in the slackbuild directory"
       exit 1
   fi
   if [ ! -d ${TMP}/$WXWINDOWS-$WXWINDOWS_VERSION/ ] ; then
       echo "$0: please build $WXWINDOWS-$WXWINDOWS_VERSION SlackBuild First"
       echo "$0:   or have the $WXWINDOWS-$WXWINDOWS_VERSION.tar.gz source in the slackbuild directory"
       exit 1
   fi
 fi

 if [ ! -f ${CWD}/pkcs11.h ] ; then
   echo "no pkcs11.h found, attempting to download it ..."
   wget ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-11/v2-20/pkcs11.h || exit 1
 fi
 if [ ! -f ${CWD}/pkcs11f.h ] ; then
   echo "no pkcs11f.h found, attempting to download it ..."
   wget ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-11/v2-20/pkcs11f.h || exit 1
 fi
 if [ ! -f ${CWD}/pkcs11t.h ] ; then
   echo "no pkcs11t.h found, attempting to download it ..."
   wget ftp://ftp.rsasecurity.com/pub/pkcs/pkcs-11/v2-20/pkcs11t.h || exit 1
 fi
export PKCS11_INC="${CWD}/"

rm -rf $PKG
mkdir -p $TMP $PKG $OUTPUT
cd $TMP
rm -rf $PRGNAM-$VERSION-source
tar xvf $CWD/TrueCrypt\ $VERSION\ Source.tar.gz
cd $PRGNAM-$VERSION-source
chown -R root:root .
find . \
 \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
 -exec chmod 755 {} \; -o \
 \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
 -exec chmod 644 {} \;

make WX_ROOT=${TMP}/$WXWINDOWS-$WXWINDOWS_VERSION/ wxbuild

CFLAGS="$SLKCFLAGS" \
CXXFLAGS="$SLKCFLAGS" \
make WXSTATIC=1 || echo "$0: compile failed"
mkdir -p $PKG/usr/bin
cp -a Main/truecrypt $PKG/usr/bin/

( cd $PKG
  find . | xargs file | grep "executable" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
  find . | xargs file | grep "shared object" | grep ELF | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null
)

mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION
cp -a Release/Setup\ Files/TrueCrypt\ User\ Guide.pdf $PKG/usr/doc/$PRGNAM-$VERSION/TrueCrypt_User_Guide.pdf
cp -a Release/Setup\ Files/License.txt $PKG/usr/doc/$PRGNAM-$VERSION/
cat $CWD/$PRGNAM.SlackBuild > $PKG/usr/doc/$PRGNAM-$VERSION/$PRGNAM.SlackBuild

mkdir -p $PKG/install
cat $CWD/slack-desc > $PKG/install/slack-desc

cd $PKG
/sbin/makepkg -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.tgz
